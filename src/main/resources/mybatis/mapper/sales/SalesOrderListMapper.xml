<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org//DTO Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.busience.sales.dao.SalesOrderListDao">
	<select id="salesOrderListSelectDao" resultType="com.busience.sales.dto.SalesOrderListDto">
		SELECT
			A.Sales_Order_lNo, A.Sales_Order_lCus_No, B.Product_Item_Name Sales_Order_lName, A.Sales_Order_lCode,
			B.Product_Info_STND_1 Sales_Order_STND_1, B.Product_Info_STND_2 Sales_Order_STND_2,
			C.Child_TBL_Type Sales_Order_CLSFC_1, C.Child_TBL_Type Sales_Order_CLSFC_2,
			A.Sales_Order_lQty, A.Sales_Order_lSum, A.Sales_Order_lUnit_Price,
			A.Sales_Order_lPrice, A.Sales_Order_lNot_Stocked, E.S_Qty Sales_SM_Last_Qty,
			A.Sales_Order_Send_Clsfc, A.Sales_Order_lInfo_Remark
		FROM Sales_OrderList_tbl A
		INNER JOIN Product_Info_tbl B ON A.Sales_Order_lCode = B.Product_Item_Code
		INNER JOIN DTL_TBL C ON B.Product_Item_CLSFC_1 = C.Child_TBL_No
		INNER JOIN DTL_TBL D ON B.Product_Item_CLSFC_2 = D.Child_TBL_No
		left outer join Stock_tbl E on A.Sales_Order_lCode = E.S_ItemCode and E.S_Warehouse = "52"
		WHERE A.Sales_Order_lCus_No = #{SalesOrderNo}
		ORDER BY A.Sales_Order_lNo
	</select>
	
	<select id="stockSelectDao"	resultType="com.busience.material.dto.StockDto">
		SELECT
		S_ItemCode, B.PRODUCT_ITEM_NAME S_ItemName,
		S_Qty, S_WareHouse,
		B.Product_Info_STND_1 S_Item_Standard_1,
		B.Product_Info_STND_1
		S_Item_Standard_2
		FROM Stock_tbl A
		inner join Product_Info_tbl B ON A.S_itemCode = B.PRODUCT_ITEM_CODE
		where A.S_itemCode = #{ItemCode}
	</select>
	
	<insert id="salesOrderListInsertUpdateDao">
		insert into Sales_OrderList_tbl
		( Sales_Order_lNo, Sales_Order_lCus_No, Sales_Order_lCode,
		Sales_Order_lQty, Sales_Order_lSum, Sales_Order_lUnit_Price,
		Sales_Order_lPrice, Sales_Order_lNot_Stocked, Sales_Order_Send_Clsfc,
		Sales_Order_lInfo_Remark
		) values (
		(select ifnull(max(SubList.Sales_Order_lNo)+1,1) from Sales_OrderList_tbl AS
		SubList
		where Sales_Order_lCus_No = #{Sales_Order_lCus_No}),
		#{Sales_Order_lCus_No}, #{Sales_Order_lCode},
		#{Sales_Order_lQty}, #{Sales_Order_lSum},
		#{Sales_Order_lUnit_Price}, #{Sales_Order_lPrice},
		#{Sales_Order_lQty}, #{Sales_Order_Send_Clsfc}, #{Sales_Order_lInfo_Remark}
		) on duplicate key update
		Sales_Order_lQty = #{Sales_Order_lQty},
		Sales_Order_lUnit_Price = #{Sales_Order_lUnit_Price},
		Sales_Order_lPrice = #{Sales_Order_lPrice},
		Sales_Order_lNot_Stocked = #{Sales_Order_lQty},
		Sales_Order_Send_Clsfc = #{Sales_Order_Send_Clsfc},
		Sales_Order_lInfo_Remark = #{Sales_Order_lInfo_Remark}
	</insert>
	
	<delete id="salesOrderListDeleteDao">
		delete from Sales_OrderList_tbl
		where Sales_Order_lCus_No = #{orderNo}
		and Sales_Order_lCode in ( 
		<foreach collection="list" item="item" index="index" separator=",">
			#{item.sales_Order_lCode}
		</foreach>
		)
	</delete>

	<update id="salesOrderListUpdateDao">
		UPDATE Sales_OrderList_tbl 
		SET Sales_Order_lSum = Sales_Order_lSum + #{Sales_Output_Order_lQty}, 
			Sales_Order_lNot_Stocked = Sales_Order_lNot_Stocked - #{Sales_Output_Order_lQty}, 
			Sales_Order_Send_Clsfc = #{Sales_Output_Order_Send_Clsfc}
		WHERE Sales_Order_lCus_No = #{Sales_Output_Order_mCus_No} AND Sales_Order_lCode = #{Sales_Output_Order_lCode}
</update>
</mapper>
